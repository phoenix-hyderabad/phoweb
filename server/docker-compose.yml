services:
    phoenixapi:
        build:
            dockerfile: ./src/deployment/Dockerfile
            context: .
        container_name: phoenix-api
        volumes:
            - .:/app
        restart: unless-stopped
        ports:
            - 9000:9000
        depends_on:
            - postgres
            - redis
        environment:
            PORT: 9000
            GOOGLE_CLIENT_ID: 924517788787-qv8p8v7i3hqg08daesnagu0ikcu8qrv0.apps.googleusercontent.com
            NODE_ENV: development
            DB_USER: postgres
            DB_HOST: localhost
            DB_PASSWORD: postgres
            DB_PORT: 5434
            REDIS_URL: redis://redis:6379
            JWT_PRIVATE_KEY: jwt_private_key
            AUTH_REFRESH_TOKEN_SECRET: refresh_token_secret
            AUTH_ACCESS_TOKEN_SECRET: access_token_secret
            DEVELOPER_USERS: f20230740
            TZ: Asia/Kolkata
            DOCKER_ENVIRONMENT: true
            HOST: "0.0.0.0"
        network_mode: "host"
    postgres:
        image: postgres:latest
        container_name: phoenix-db
        restart: "no"
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            TZ: "Asia/Kolkata"
        ports:
            - ${DB_PORT}:5432
        volumes:
            - postgres_db:/var/lib/postgresql/data
        networks:
            - api-network

    pgadmin:
        image: dpage/pgadmin4:latest
        container_name: phoenix-pgadmin
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@example.com
            PGADMIN_DEFAULT_PASSWORD: admin
            TZ: Asia/Kolkata
            GUNICORN_ACCESS_LOGFILE: "/dev/null"
            PGADMIN_CONFIG_UPGRADE_CHECK_ENABLED: "False"
        ports:
            - "5050:80"
        depends_on:
            - postgres
        networks:
            - api-network
        logging:
            driver: none

    redis:
        image: redis:6.2.5
        container_name: phoenix-redis
        restart: "no"
        ports:
            - 6379:6379
        networks:
            - api-network

volumes:
    postgres_db:

networks:
    api-network:
        driver: bridge
